<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tzBH4rePuluzeu7maKSI/9k=
</value>
  </data>
</root>